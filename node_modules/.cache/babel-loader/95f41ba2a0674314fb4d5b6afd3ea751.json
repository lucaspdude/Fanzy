{"ast":null,"code":"import react, { useState, useEffect } from 'react';\nexport function arredondaValor(numero) {\n  return +`${Math.floor(`${numero}e+${2}`)}e-${2}`;\n}\nexport function formataValorEmReal(numero) {\n  return numero.toLocaleString('pr-BR', {\n    minimumFractionDigits: 2\n  });\n}\n\nfunction calcValorAdicionais(adicionais) {\n  const adicionalSoma = adicionais.map(adicional => {\n    const filtered = [];\n    filtered.valor = adicional.valor;\n    filtered.quantidade = adicional.quantidade;\n    filtered.valortotal = adicional.valor * adicional.quantidade;\n    return filtered;\n  });\n  return adicionalSoma.reduce((total, obj) => {\n    return arredondaValor(total + obj.valortotal);\n  }, 0);\n}\n\nfunction ajustaCamposPedidos(comanda) {\n  if (comanda) {\n    const pedidosParse = comanda.pedidos.map(pedido => pedido);\n    const pedidoProdutos = pedidosParse.map(item => {\n      const filtered = []; // filtered.pedidos_usuarios = item.pedidos_usuarios;\n\n      filtered.id = item.produto.id;\n      filtered.observacoes = item.observacoes;\n      filtered.entregue = item.entregue;\n      filtered.produto = item.produto.produto;\n      filtered.valor = item.produto.valor;\n      filtered.quantidade = item.produto.quantidade;\n      filtered.somaAdicionais = calcValorAdicionais(item.produto.adicionais);\n      filtered.valorTotal = arredondaValor(item.produto.valor * item.produto.quantidade);\n      filtered.usuarios = item.pedidos_usuarios;\n      filtered.valorTotalGeral = arredondaValor(item.produto.valor * item.produto.quantidade + calcValorAdicionais(item.produto.adicionais));\n      filtered.created_at = item.produto.created_at;\n      filtered.estabelecimento_id = item.produto.estabelecimento_id;\n      filtered.adicionais = item.produto.adicionais;\n      return filtered;\n    });\n    return pedidoProdutos;\n  }\n}\n\nexport function CalculaValorTotalMesa(comanda) {\n  if (comanda.pedidos) {\n    const pedidoProdutos = ajustaCamposPedidos(comanda.pedidos);\n\n    if (pedidoProdutos) {\n      const somaTotal = pedidoProdutos.reduce((total, objeto) => {\n        return arredondaValor(total + objeto.valorTotalGeral);\n      }, 0);\n      return formataValorEmReal(somaTotal);\n    }\n  }\n}\nexport function PedidosComanda(comanda) {\n  if (comanda.pedidos) {\n    const comandaPedidos = comanda.pedidos;\n    const usuarios = comandaPedidos.usuarios;\n    const filtered = {};\n    filtered.chamados = comandaPedidos.chamados;\n    filtered.created_at = comandaPedidos.created_at;\n    filtered.estabelecimento = comandaPedidos.estabelecimento;\n    filtered.estabelecimento_id = comandaPedidos.estabelecimento_id;\n    filtered.id = comandaPedidos.id;\n    filtered.mesa = comandaPedidos.mesa;\n    filtered.mesa_id = comandaPedidos.mesa_id;\n    filtered.created_at = comandaPedidos.created_at;\n    filtered.pedidos = ajustaCamposPedidos(comandaPedidos);\n    filtered.updated_at = comandaPedidos.updated_at; // filtered.usuarios = comandaPedidos.usuarios.map(usuario => usuario);\n\n    filtered.usuarios = 'something';\n    filtered.valortotal = comandaPedidos.valortotal;\n    return filtered;\n  }\n}\nexport function formataEmReal(str) {\n  var int = parseInt(str.replace(/[\\D]+/g, ''));\n  var tmp = int + '';\n  tmp = tmp.replace(/([0-9]{2})$/g, \",$1\");\n  if (tmp.length > 6) tmp = tmp.replace(/([0-9]{3}),([0-9]{2}$)/g, \".$1,$2\");\n  return tmp;\n}\nexport function SomaPagamentos(pagamentos) {\n  if (pagamentos.length > 0) {\n    const ValorTotalPago = pagamentos.filter(pagamento => {\n      return pagamento.status === 1;\n    }).reduce((total, obj) => {\n      return total + arredondaValor(obj.valor);\n    }, 0);\n    return formataValorEmReal(ValorTotalPago);\n  }\n}","map":{"version":3,"sources":["/home/lucas/Dev/Pessoal/App/src/components/Calculos/index.js"],"names":["react","useState","useEffect","arredondaValor","numero","Math","floor","formataValorEmReal","toLocaleString","minimumFractionDigits","calcValorAdicionais","adicionais","adicionalSoma","map","adicional","filtered","valor","quantidade","valortotal","reduce","total","obj","ajustaCamposPedidos","comanda","pedidosParse","pedidos","pedido","pedidoProdutos","item","id","produto","observacoes","entregue","somaAdicionais","valorTotal","usuarios","pedidos_usuarios","valorTotalGeral","created_at","estabelecimento_id","CalculaValorTotalMesa","somaTotal","objeto","PedidosComanda","comandaPedidos","chamados","estabelecimento","mesa","mesa_id","updated_at","formataEmReal","str","int","parseInt","replace","tmp","length","SomaPagamentos","pagamentos","ValorTotalPago","filter","pagamento","status"],"mappings":"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","sourcesContent":["import react, { useState, useEffect } from 'react';\n\nexport function arredondaValor(numero) {\n  return +`${Math.floor(`${numero}e+${2}`)}e-${2}`;\n}\n\nexport function formataValorEmReal(numero) {\n  return numero.toLocaleString('pr-BR', { minimumFractionDigits: 2 });\n}\n\nfunction calcValorAdicionais(adicionais) {\n  const adicionalSoma = adicionais.map(adicional => {\n    const filtered = [];\n    filtered.valor = adicional.valor;\n    filtered.quantidade = adicional.quantidade;\n    filtered.valortotal = adicional.valor * adicional.quantidade;\n    return filtered;\n  });\n  return adicionalSoma.reduce((total, obj) => {\n    return arredondaValor(total + obj.valortotal);\n  }, 0);\n}\nfunction ajustaCamposPedidos(comanda) {\n  if (comanda) {\n    const pedidosParse = comanda.pedidos.map(pedido => pedido);\n    const pedidoProdutos = pedidosParse.map(item => {\n      const filtered = [];\n      // filtered.pedidos_usuarios = item.pedidos_usuarios;\n      filtered.id = item.produto.id;\n      filtered.observacoes = item.observacoes;\n      filtered.entregue = item.entregue;\n      filtered.produto = item.produto.produto;\n      filtered.valor = item.produto.valor;\n      filtered.quantidade = item.produto.quantidade;\n      filtered.somaAdicionais = calcValorAdicionais(item.produto.adicionais);\n      filtered.valorTotal = arredondaValor(\n        item.produto.valor * item.produto.quantidade\n      );\n      filtered.usuarios = item.pedidos_usuarios;\n      filtered.valorTotalGeral = arredondaValor(\n        item.produto.valor * item.produto.quantidade +\n          calcValorAdicionais(item.produto.adicionais)\n      );\n      filtered.created_at = item.produto.created_at;\n      filtered.estabelecimento_id = item.produto.estabelecimento_id;\n      filtered.adicionais = item.produto.adicionais;\n\n      return filtered;\n    });\n\n    return pedidoProdutos;\n  }\n}\n\nexport function CalculaValorTotalMesa(comanda) {\n  if (comanda.pedidos) {\n    const pedidoProdutos = ajustaCamposPedidos(comanda.pedidos);\n\n    if (pedidoProdutos) {\n      const somaTotal = pedidoProdutos.reduce((total, objeto) => {\n        return arredondaValor(total + objeto.valorTotalGeral);\n      }, 0);\n\n      return formataValorEmReal(somaTotal);\n    }\n  }\n}\n\nexport function PedidosComanda(comanda) {\n  if (comanda.pedidos) {\n    const comandaPedidos = comanda.pedidos;\n    const usuarios = comandaPedidos.usuarios;\n\n    const filtered = {};\n    filtered.chamados = comandaPedidos.chamados;\n    filtered.created_at = comandaPedidos.created_at;\n    filtered.estabelecimento = comandaPedidos.estabelecimento;\n    filtered.estabelecimento_id = comandaPedidos.estabelecimento_id;\n    filtered.id = comandaPedidos.id;\n    filtered.mesa = comandaPedidos.mesa;\n    filtered.mesa_id = comandaPedidos.mesa_id;\n    filtered.created_at = comandaPedidos.created_at;\n    filtered.pedidos = ajustaCamposPedidos(comandaPedidos);\n    filtered.updated_at = comandaPedidos.updated_at;\n    // filtered.usuarios = comandaPedidos.usuarios.map(usuario => usuario);\n    filtered.usuarios = 'something';\n    filtered.valortotal = comandaPedidos.valortotal;\n    return filtered;\n  }\n}\n\n\n\n\nexport function formataEmReal(str) {\n  var int = parseInt(str.replace(/[\\D]+/g, ''));\n  var tmp = int + '';\n  tmp = tmp.replace(/([0-9]{2})$/g, \",$1\");\n  if (tmp.length > 6)\n      tmp = tmp.replace(/([0-9]{3}),([0-9]{2}$)/g, \".$1,$2\");\n  return tmp;\n}\n\n\n\nexport function SomaPagamentos(pagamentos){\n  if(pagamentos.length > 0){\n\n    const ValorTotalPago = pagamentos\n    .filter(pagamento => {\n      return pagamento.status === 1;\n    })\n    .reduce((total, obj) => {\n      return total + arredondaValor(obj.valor)\n    },0)\n\n    return formataValorEmReal(ValorTotalPago)\n  }\n  \n\n}"]},"metadata":{},"sourceType":"module"}