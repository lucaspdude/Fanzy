{"ast":null,"code":"var _jsxFileName = \"/home/lucas/Dev/Pessoal/App/src/pages/SignIn/index.js\";\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as Yup from 'yup';\nimport { Form, Input } from '@rocketseat/unform';\nimport { signInRequest } from \"../../store/modules/auth/actions\"; // import logo from '~/assets/images/logo.png';\n\nimport { Container, Logo, ImageBG, Links } from './styles';\nimport { auth, database } from \"../../services/firebase.utils\";\nimport { toast } from 'react-toastify';\nconst schema = Yup.object().shape({\n  email: Yup.string().email('Insira um e-mail no formato correto').required('E-mail obrigatorio'),\n  password: Yup.string().min(6, 'A senha deve ter no minimo 6 caracteres').required('Senha Obrigatoria')\n});\nexport default function SignIn() {\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false);\n\n  function handleSubmit(data) {\n    setLoading(true);\n    const {\n      email,\n      password\n    } = data;\n    database.collection('adminUsers').get().then(response => {\n      const stores = response.docs.map(item => {\n        const obj = item.data();\n        return obj;\n      });\n      auth.signInWithEmailAndPassword(email, password).then(response => {\n        const currentUser = response.user;\n        const currentUserIsAdmin = stores.filter(store => store.user_id === currentUser.uid);\n\n        if (currentUserIsAdmin.length === 0) {\n          toast.error(\"You don't have permissions to access this dashboard\");\n        } else {\n          dispatch(signInRequest(currentUser));\n        }\n\n        setLoading(false);\n      }).catch(error => {\n        toast.error(error.message);\n      });\n    }).catch(error => {\n      console.log(error);\n      return;\n    }); // auth.signInWithEmailAndPassword(email, password)\n    //                         .then(response => {\n    //                             const currentUser = response.user;\n    //                             console.log(currentUser)\n    //                             console.log(adminUsers)\n    //                             if(currentUser.uid.indexOf(adminUsers.user_id) === -1){\n    //                                 console.log(\"Incluido\")\n    //                             }else{\n    //                                 console.log(\"Não é ADMIN\")\n    //                             }\n    //                             // dispatch(signInRequest(response.user))\n    //                         })\n    //                         .catch(error => {\n    //                             console.log(error)\n    //                             toast.error(error.message)\n    //                         })\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n    className: \"col-12 col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    schema: schema,\n    onSubmit: handleSubmit,\n    className: \"frm__signIn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"email\",\n    type: \"email\",\n    placeholder: \"E-mail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"password\",\n    type: \"password\",\n    placeholder: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Links, {\n    className: \"d-flex flex-column align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-warning \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, loading ? 'Loading...' : 'Login'), /*#__PURE__*/React.createElement(Link, {\n    to: \"/forgot\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, \"Reset Password\")))), /*#__PURE__*/React.createElement(ImageBG, {\n    className: \"col-12 col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"sources":["/home/lucas/Dev/Pessoal/App/src/pages/SignIn/index.js"],"names":["React","useState","Link","useDispatch","useSelector","Yup","Form","Input","signInRequest","Container","Logo","ImageBG","Links","auth","database","toast","schema","object","shape","email","string","required","password","min","SignIn","dispatch","loading","setLoading","handleSubmit","data","collection","get","then","response","stores","docs","map","item","obj","signInWithEmailAndPassword","currentUser","user","currentUserIsAdmin","filter","store","user_id","uid","length","error","catch","message","console","log"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as Yup from 'yup';\nimport { Form, Input } from '@rocketseat/unform';\n\nimport { signInRequest } from '~/store/modules/auth/actions';\n\n// import logo from '~/assets/images/logo.png';\n\nimport { Container, Logo, ImageBG, Links } from './styles';\nimport {auth, database} from '~/services/firebase.utils';\nimport { toast } from 'react-toastify';\n\n\nconst schema = Yup.object().shape({\n    email: Yup.string()\n        .email('Insira um e-mail no formato correto')\n        .required('E-mail obrigatorio'),\n    password: Yup.string()\n        .min(6, 'A senha deve ter no minimo 6 caracteres')\n        .required('Senha Obrigatoria'),\n});\n\nexport default function SignIn() {\n    const dispatch = useDispatch();\n    const [loading, setLoading] = useState(false);\n\n    function handleSubmit(data) {\n        setLoading(true);\n        const {email, password} = data;\n        database.collection('adminUsers')\n        .get()\n        .then((response) => {\n            const stores = response.docs.map(item => {\n                const obj = item.data();\n                return obj;\n            })\n\n\n            auth.signInWithEmailAndPassword(email, password)\n                .then(response => {\n                    const currentUser = response.user;\n                    const currentUserIsAdmin = stores.filter(store => store.user_id === currentUser.uid);\n                    if(currentUserIsAdmin.length === 0){\n                        toast.error(\"You don't have permissions to access this dashboard\");\n                        \n                    }else{\n                        \n                        dispatch(signInRequest(currentUser))\n                    }\n                    setLoading(false)\n                })\n                .catch(error => {\n                    toast.error(error.message)\n                })\n        })\n        .catch((error) => {\n            console.log(error)\n            return ;\n        })\n\n        \n        // auth.signInWithEmailAndPassword(email, password)\n        //                         .then(response => {\n        //                             const currentUser = response.user;\n        //                             console.log(currentUser)\n\n        //                             console.log(adminUsers)\n        //                             if(currentUser.uid.indexOf(adminUsers.user_id) === -1){\n        //                                 console.log(\"Incluido\")\n        //                             }else{\n        //                                 console.log(\"Não é ADMIN\")\n        //                             }\n\n        //                             // dispatch(signInRequest(response.user))\n        //                         })\n        //                         .catch(error => {\n        //                             console.log(error)\n        //                             toast.error(error.message)\n        //                         })\n\n    }\n\n    return (\n        <>\n        <Container className=\"col-12 col-md-6\">\n            {/* <Logo src={logo} alt=\"Logo\" className=\"logo\" /> */}\n\n            <Form schema={schema} onSubmit={handleSubmit} className=\"frm__signIn\">\n                <Input name=\"email\" type=\"email\" placeholder=\"E-mail\" />\n                <Input\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                />\n\n                <Links className=\"d-flex flex-column align-items-center\">\n                    <button type=\"submit\" className=\"btn btn-warning \">\n                        {loading ? 'Loading...' : 'Login'}\n                    </button>\n                    <Link to=\"/forgot\">Reset Password</Link>\n                </Links>\n\n            </Form>\n        </Container>\n        <ImageBG className=\"col-12 col-md-6\"></ImageBG>\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}