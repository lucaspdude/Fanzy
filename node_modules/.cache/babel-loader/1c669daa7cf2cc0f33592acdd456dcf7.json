{"ast":null,"code":"var _jsxFileName = \"/home/lucas/Dev/Pessoal/App/src/pages/Dashboard/components/MediaConsumo/index.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport api from \"../../../../services/api\";\nimport { useSelector } from 'react-redux';\nimport { formataValorEmReal, formataEmReal } from \"../../../../components/Calculos\";\nimport { Link } from 'react-router-dom';\nexport default function MediaConsumo() {\n  const [mesasPedidos, setMesasPedidos] = useState([]);\n  const [clientes, setClientes] = useState([]);\n  const profile = useSelector(state => state.user.profile);\n\n  function calcValorAdicionais(adicionais) {\n    const adicionalSoma = adicionais.map(adicional => {\n      const filtered = [];\n      filtered.valor = adicional.valor;\n      filtered.quantidade = adicional.quantidade;\n      filtered.valortotal = adicional.valor * adicional.quantidade;\n      return filtered;\n    });\n    return adicionalSoma.reduce((total, obj) => {\n      return arredondaValor(total + obj.valortotal);\n    }, 0);\n  }\n\n  function arredondaValor(numero) {\n    return +`${Math.floor(`${numero}e+${2}`)}e-${2}`;\n  }\n\n  function calculaValorPedidoPorUsuario(pedidos) {\n    // console.log(pedidos)\n    const pedidosAjustados = pedidos.map(pedido => {\n      const filtered = {};\n      filtered.id = pedido.id;\n      filtered.produto = pedido.produto.produto;\n      filtered.valorAdicionais = calcValorAdicionais(pedido.produto.adicionais);\n      filtered.valorProduto = arredondaValor(pedido.produto.valor * pedido.produto.quantidade);\n      filtered.valorTotalPedido = arredondaValor(filtered.valorAdicionais + filtered.valorProduto);\n      filtered.valorDoUsuario = arredondaValor(filtered.valorTotalPedido / pedido.pedidos_usuarios.length);\n      return filtered;\n    });\n    return pedidosAjustados;\n  }\n\n  function preparaDados(mesas) {\n    // console.log(mesas)\n    const usuariosPorMesa = mesas.map(mesa => {\n      const filtered = {};\n      filtered.usuarios = mesa.usuarios.map(usuario => {\n        const filtered = {};\n        filtered.id = usuario.user.id;\n        filtered.nome = usuario.user.name;\n        filtered.url = usuario.user.media[0].url;\n        filtered.consumo = calculaValorPedidoPorUsuario(mesa.pedidos);\n        filtered.valorMedio = formataValorEmReal(filtered.consumo.reduce((total, objeto) => {\n          return total + objeto.valorDoUsuario;\n        }, 0));\n        return filtered;\n      }); // filtered.usuario.consumo = calculaValorPedidoPorUsuario(mesa.pedidos)\n\n      return filtered.usuarios;\n    });\n    const flattened = usuariosPorMesa.flat();\n    return flattened;\n  }\n\n  useEffect(() => {\n    api.get(`relatorios/pedidos/${profile.id}`).then(response => {\n      setMesasPedidos(response.data.mesaspedidos);\n      setClientes(preparaDados(response.data.mesaspedidos));\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, clientes && /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"mais-consumidos\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, clientes.slice(0, 5).map(cliente => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: cliente.id,\n      className: \"mais-consumidos-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"descricao\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/dashboard/clientes/${cliente.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 37\n      }\n    }, cliente.nome)), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"valor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 33\n      }\n    }, \"R$ \", cliente.valorMedio));\n  })));\n}","map":{"version":3,"sources":["/home/lucas/Dev/Pessoal/App/src/pages/Dashboard/components/MediaConsumo/index.jsx"],"names":["React","useEffect","useState","api","useSelector","formataValorEmReal","formataEmReal","Link","MediaConsumo","mesasPedidos","setMesasPedidos","clientes","setClientes","profile","state","user","calcValorAdicionais","adicionais","adicionalSoma","map","adicional","filtered","valor","quantidade","valortotal","reduce","total","obj","arredondaValor","numero","Math","floor","calculaValorPedidoPorUsuario","pedidos","pedidosAjustados","pedido","id","produto","valorAdicionais","valorProduto","valorTotalPedido","valorDoUsuario","pedidos_usuarios","length","preparaDados","mesas","usuariosPorMesa","mesa","usuarios","usuario","nome","name","url","media","consumo","valorMedio","objeto","flattened","flat","get","then","response","data","mesaspedidos","catch","error","console","log","slice","cliente"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport api from '~/services/api';\nimport { useSelector } from 'react-redux';\nimport { formataValorEmReal, formataEmReal } from '~/components/Calculos';\nimport { Link } from 'react-router-dom';\n\nexport default function MediaConsumo() {\n\n    const [mesasPedidos, setMesasPedidos] = useState([]);\n    const [clientes, setClientes] = useState([]);\n\n\n    const profile = useSelector(state => state.user.profile)\n\n\n    function calcValorAdicionais(adicionais) {\n        const adicionalSoma = adicionais.map(adicional => {\n          const filtered = [];\n          filtered.valor = adicional.valor;\n          filtered.quantidade = adicional.quantidade;\n          filtered.valortotal = adicional.valor * adicional.quantidade;\n          return filtered;\n        });\n        return adicionalSoma.reduce((total, obj) => {\n          return arredondaValor(total + obj.valortotal);\n        }, 0);\n      }\n\n\n    function arredondaValor(numero) {\n        return +`${Math.floor(`${numero}e+${2}`)}e-${2}`;\n    }\n\n\n\n    function calculaValorPedidoPorUsuario(pedidos){\n\n        // console.log(pedidos)\n        const pedidosAjustados = pedidos.map(pedido => {\n            const filtered = {};\n            filtered.id = pedido.id\n            filtered.produto = pedido.produto.produto\n            filtered.valorAdicionais = calcValorAdicionais(pedido.produto.adicionais);\n            filtered.valorProduto = arredondaValor(pedido.produto.valor * pedido.produto.quantidade);\n            filtered.valorTotalPedido = arredondaValor(filtered.valorAdicionais + filtered.valorProduto);\n            filtered.valorDoUsuario = arredondaValor(filtered.valorTotalPedido / pedido.pedidos_usuarios.length)\n            return filtered;\n        });\n        return pedidosAjustados\n        \n\n    }\n\n    function preparaDados(mesas){\n        // console.log(mesas)\n        const usuariosPorMesa = mesas.map(mesa => {\n            const filtered = {};\n\n            filtered.usuarios = mesa.usuarios.map(usuario => {\n                const filtered = {};\n                filtered.id = usuario.user.id;\n                filtered.nome = usuario.user.name\n                filtered.url = usuario.user.media[0].url\n                filtered.consumo = calculaValorPedidoPorUsuario(mesa.pedidos)\n                filtered.valorMedio = formataValorEmReal(filtered.consumo.reduce((total, objeto) => {\n                    return total + objeto.valorDoUsuario\n                } ,0)) \n                return filtered;\n            });\n            // filtered.usuario.consumo = calculaValorPedidoPorUsuario(mesa.pedidos)\n\n              \n            return filtered.usuarios;\n        })\n        const flattened = usuariosPorMesa.flat();\n        return flattened;\n        \n    }\n\n    useEffect(() => {\n        api.get(`relatorios/pedidos/${profile.id}`)\n            .then(response => {\n                setMesasPedidos(response.data.mesaspedidos);\n                setClientes(preparaDados(response.data.mesaspedidos))\n            })\n            .catch(error => {console.log(error)})\n    }, [])\n\n\n\n\n    return (\n        <div>\n            {clientes && (\n                <ul className=\"mais-consumidos\">\n                    {clientes.slice(0,5).map(cliente => {\n                        return(\n                            <li key={cliente.id} className=\"mais-consumidos-item\">\n\n                                <span className=\"descricao\">\n                                    <Link to={`/dashboard/clientes/${cliente.id}`}>\n                                    {cliente.nome}\n                                    </Link>\n                                    \n                                </span>\n                                <span className=\"valor\">R$ { cliente.valorMedio }</span>\n                            </li>\n                        )\n                    })}\n                </ul>\n            )}\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}